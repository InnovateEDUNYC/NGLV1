@using NGL.Web.Infrastructure.Security
@model NGL.Web.Models.Student.ProfileModel

@{
    ViewBag.Title = "Profile";
    var success = TempData["ShowSuccess"] as bool?;
}

@if (success == true)
{
    <div id="profile-edit-success" class="alert alert-success alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        Successfully updated profile
    </div>
}
@if (success == false)
{
    <div id="profile-edit-error" class="alert alert-danger alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        Oops! Something went wrong. Please try editing again.
    </div>
}

<div class="panel panel-gray">
    <h2>Student Profile</h2>
    <div class="row">
        <div class="col-md-3">
            <div class="panel panel-default text-center profile-photo-and-buttons-panel">
                <div class="profile-photo-container">
                    <img class="profile-image" src="@Model.ProfilePhotoUrl"></img>

                    @if ((User as NglPrincipal).HasAccessTo("enrollment", "edit"))
                    {
                        <div class="upload-profile-photo-container">
                            @using (var f = Html.BeginNglForm(method: FormMethod.Post, enctype: EncType.Multipart, action: "uploadPhoto/?usi=" + Model.StudentUsi, htmlAttributes:
                        new HtmlAttributes().Id("profile-photo-uplaod")))
                            {
                                <div class="upload-profile-photo">
                                    <button type="button" class="btn btn-default">
                                        New photo
                                    </button>
                                    <input type="file" class="ghost-btn center-block" name="profilePhoto" accept="image/*" />
                                </div>

                            }
                        </div>
                    }
                        @Html.Partial("StudentName", Model.StudentName)
                    <p>
                        @Html.DisplayNameFor(model => model.StudentUsi): 
                        @Html.DisplayFor(model => model.StudentUsi)
                    </p>
                    
                </div>

                <div class="btn-group-horizontal">
                    <p>
                        @if ((User as NglPrincipal).HasAccessTo("assessment", "view"))
                        {
                            @Html.ActionLink("Reports", MVC.Assessment.Week(@Model.StudentUsi, null), new { @class = "btn btn-primary" })
                        }
                    </p>
                    <p>
                        @if ((User as NglPrincipal).HasAccessTo("scheduleStudents", "create"))
                        {
                            @Html.ActionLink("Scheduling", MVC.Schedule.Set(Model.StudentUsi), new { @class = "btn btn-default" })
                        }
                    </p>
                </div>
                
            </div>
            <div class="panel panel-default">
                @if ((User as NglPrincipal).HasAccessTo("attendance", "clearAllFlags"))
                {
                    <h4 class="strong"><span id="edit-attendance" class="fa fa-pencil pull-right enabled-edit"></span></h4>
                }

                <h4 class="strong">Attendance</h4>
                <div class="progress attendance-percentage">
                    <div class="progress-bar" style="width: @Model.AttendancePercentage%;">
                        <span class="sr-only"></span>
                    </div>
                </div>

                <span id="profile-attendance-percentage-value">
                    @Html.DisplayFor(model => model.AttendancePercentage)%
                </span>
                
                <div class="attendance-flags">
                    @for (var i = 0; i < @Model.FlagCount; i++)
                    {
                        if (i == 0) { <span class="fa fa-flag fa-2x great"></span> }
                        else if (i == 1) { <span class="fa fa-flag fa-2x in-danger"></span> }
                        else { <span class="fa fa-flag fa-2x bad"></span> }
                    }
                </div>

                <form hidden="hidden" method="post" id="editFlags" action="@Url.Action(MVC.Attendance.EditFlags(Model.StudentUsi, 0))">
                    <input id="flag-count" class="hidden" type="text" name="newFlagCount" value="@Model.FlagCount" />
                    
                    <div class="text-right top-buffer-10">
                        @Html.ActionLink("Cancel", MVC.Student.Index(Model.StudentUsi), new { @class = "btn btn-default" })
                        <button class="btn btn-primary" type="submit">Save</button>
                    </div>
                </form>

            </div>
        </div>
        <div class="col-md-9">
            
        @Html.Partial("BiographicalInformation", Model.BiographicalInfo)
        @Html.Partial("AcademicDetails", Model)
        @Html.Partial("ProgramStatus", Model)
        @Html.Partial("HomeAddress", Model.HomeAddress)
        @Html.Partial("ParentPartial", Model.EditProfileParentModel)

        <h4 class="panel panel-default strong" data-toggle="collapse" data-parent="#accordion" href="#collapseParentAddress">   Parent Address <i class="fa fa-caret-down arrow"></i></h4>
        <div id="collapseParentAddress" class="panel-collapse collapse">
            <div class="panel panel-default">
                @if (Model.EditProfileParentModel.SameAddressAsStudent == false)
                {
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.EditProfileParentModel.ProfileParentAddressModel.Address)
                        </dt>
                        <dd>
                            @Html.DisplayTextFor(model => model.EditProfileParentModel.ProfileParentAddressModel.Address)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.EditProfileParentModel.ProfileParentAddressModel.Address2)
                        </dt>
                        <dd>
                            @Html.DisplayTextFor(model => model.EditProfileParentModel.ProfileParentAddressModel.Address2)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.EditProfileParentModel.ProfileParentAddressModel.City)
                        </dt>
                        <dd>
                            @Html.DisplayTextFor(model => model.EditProfileParentModel.ProfileParentAddressModel.City)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.EditProfileParentModel.ProfileParentAddressModel.State)
                        </dt>
                        <dd>
                            @Html.DisplayTextFor(model => model.EditProfileParentModel.ProfileParentAddressModel.State)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.EditProfileParentModel.ProfileParentAddressModel.PostalCode)
                        </dt>
                        <dd>
                            @Html.DisplayTextFor(model => model.EditProfileParentModel.ProfileParentAddressModel.PostalCode)
                        </dd>
                    </dl>
                }
                else
                {
                    <p>Same as student</p><br />
                }
            </div>
        </div>
        @if (Model.SecondEditProfileParentModel != null)
        {

            @Html.Partial("ProgramStatus", Model)
            @Html.Partial("HomeAddress", Model.HomeAddress)
            @Html.Partial("ParentPartial", Model.EditableParentModel)

                @if (Model.SecondEditableParentModel != null)
                {

                    <h4 class="panel panel-default strong" data-toggle="collapse" data-parent="#accordion" href="#collapseSecondParent">   Second Parent <i class="fa fa-caret-down arrow"></i></h4>
                    <div id="collapseSecondParent" class="panel-collapse collapse">
                        <div class="panel panel-default">
                            <h4>
                                <strong>
                                    @Html.DisplayTextFor(model => model.SecondEditableParentModel.FirstName) @Html.DisplayTextFor(model => model.SecondEditableParentModel.LastName)
                                </strong>
                            </h4>
                            <dl class="dl-horizontal">
                                <dt>
                                    @Html.DisplayNameFor(model => model.SecondEditableParentModel.Sex)
                                </dt>

                                <dd>
                                    @Html.DisplayTextFor(model => model.SecondEditableParentModel.Sex)
                                </dd>
                                <dt>
                                    @Html.DisplayNameFor(model => model.SecondEditableParentModel.Relationship)
                                </dt>
                                <dd>
                                    @Html.DisplayTextFor(model => model.SecondEditableParentModel.Relationship)
                                </dd>
                                <dt>
                                    @Html.DisplayNameFor(model => model.SecondEditableParentModel.TelephoneNumber)
                                </dt>

                                <dd>
                                    @Html.DisplayTextFor(model => model.SecondEditableParentModel.TelephoneNumber)
                                </dd>
                                <dt>
                                    @Html.DisplayNameFor(model => model.SecondEditableParentModel.EmailAddress)
                                </dt>

                                <dd>
                                    @Html.DisplayTextFor(model => model.SecondEditableParentModel.EmailAddress)<br />
                                </dd>
                            </dl>
                        </div>
                    </div>
                    
                    <h4 class="panel panel-default strong" data-toggle="collapse" data-parent="#accordion" href="#collapseSecondParentAddress">   Second Parent Address <i class="fa fa-caret-down arrow"></i></h4>
                    <div id="collapseSecondParentAddress" class="panel-collapse collapse">
                        <div class="panel panel-default">
                            @if (Model.SecondEditableParentModel.SameAddressAsStudent == false)
                            {
                                <dl class="dl-horizontal">
                                    <dt>
                                        @Html.DisplayNameFor(model => model.SecondEditableParentModel.EditableParentAddressModel.Address)
                                    </dt>
                                    <dd>
                                        @Html.DisplayTextFor(model => model.SecondEditableParentModel.EditableParentAddressModel.Address)
                                    </dd>
                                    <dt>
                                        @Html.DisplayNameFor(model => model.SecondEditableParentModel.EditableParentAddressModel.Address2)
                                    </dt>
                                    <dd>
                                        @Html.DisplayTextFor(model => model.SecondEditableParentModel.EditableParentAddressModel.Address2)
                                    </dd>
                                    <dt>
                                        @Html.DisplayNameFor(model => model.SecondEditableParentModel.EditableParentAddressModel.City)
                                    </dt>
                                    <dd>
                                        @Html.DisplayTextFor(model => model.SecondEditableParentModel.EditableParentAddressModel.City)
                                    </dd>
                                    <dt>
                                        @Html.DisplayNameFor(model => model.SecondEditableParentModel.EditableParentAddressModel.StateForDisplay)
                                    </dt>
                                    <dd>
                                        @Html.DisplayTextFor(model => model.SecondEditableParentModel.EditableParentAddressModel.StateForDisplay)
                                    </dd>
                                    <dt>
                                        @Html.DisplayNameFor(model => model.SecondEditableParentModel.EditableParentAddressModel.PostalCode)
                                    </dt>
                                    <dd>
                                        @Html.DisplayTextFor(model => model.SecondEditableParentModel.EditableParentAddressModel.PostalCode)
                                    </dd>
                                </dl>
                            }
                            else
                            {
                                <p>Same as student</p><br />
                            }
                        </div>
                    </div>
                }
            </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    Ngl.student.index.init();
    Ngl.shared.enableEditMode.init();
    Ngl.shared.accordianArrows.init();
    Ngl.student.editBiographicalInfo.init();
    Ngl.student.editParentInfo.init();
    Ngl.student.editAcademicDetails.init();
    Ngl.student.editProgramStatus.init();
    Ngl.student.editStudentName.init();
    Ngl.student.editHomeAddress.init();
}
