@using Microsoft.Ajax.Utilities
@using NGL.Web.Infrastructure.Security
@model NGL.Web.Models.Student.ProfileModel

@{
    ViewBag.Title = "Profile";
    string downloadFileText = "Download File";
}

<h2>Profile</h2>
<div class="container">
    <div class="col-md-4">
        <div class="profile-photo-container">
            <img src="@Model.ProfilePhotoUrl"></img>

            @if ((User as NglPrincipal).HasAccessTo("enrollment", "edit"))
            {
                using (var f = Html.BeginNglForm(method: FormMethod.Post, enctype: EncType.Multipart, action: "uploadPhoto/?usi=" + Model.StudentUsi))
                {
                    <div class="upload-profile-photo">
                        <button class="click-button btn btn-default">New photo</button>
                        <input type="file" class="ghost-button" name="profilePhoto" accept="image/*" />
                    </div>
                }
            }
        </div>

        @if ((User as NglPrincipal).HasAccessTo("scheduleStudents", "create"))
        {
            <div class="scheduling">
                @Html.ActionLink("Scheduling", MVC.Schedule.Set(Model.StudentUsi))
            </div>
        }
    </div>

    <div class="col-md-6">
        <h4>Biographical Information</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.StudentUsi)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.StudentUsi)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.FirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.FirstName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.LastName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LastName)
            </dd>
            <dt>
                Sex
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Sex)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.BirthDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.BirthDate)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.HispanicLatinoEthnicity)
            </dt>

            <dd>
                @Html.DisplayTextFor(model => model.HispanicLatinoEthnicity)
            </dd>

            <dt>
                Race
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Race)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.HomeLanguage)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.HomeLanguage)
            </dd>
        </dl>
        <h4>@Html.DisplayFor(model => model.AcademicDetail.SchoolYear) Academic Details</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.AcademicDetail.WritingScore)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.AcademicDetail.WritingScore)<br />
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.AcademicDetail.ReadingScore)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.AcademicDetail.ReadingScore)<br />
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.AcademicDetail.MathScore)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.AcademicDetail.MathScore)<br />
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.AcademicDetail.PerformanceHistoryFileUrl)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.AcademicDetail.PerformanceHistory)<br />
            </dd>
            <dd>
                @if (Model.AcademicDetail != null && Model.AcademicDetail.PerformanceHistoryFileUrl != null)
                {
                    <a href="@Model.AcademicDetail.PerformanceHistoryFileUrl">@downloadFileText</a><br />
                }
            </dd>
        </dl>
        
        <h4>Program Status Information</h4>
        <hr />
        @if (Model.ProgramStatus == null)
        {
            <dl class="dl-horizontal">No Information Entered</dl>
        }
        else
        {
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.ProgramStatus.TestingAccommodation)
                </dt>
                <dd>
                    @Html.DisplayTextFor(model => model.ProgramStatus.TestingAccommodation)
                    @if (Model.ProgramStatus.TestingAccommodationFile != null)
                    {
                        <a href="@Model.ProgramStatus.TestingAccommodationFile">@downloadFileText</a>
                    }
                    <br />
                </dd>
                <dd>
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ProgramStatus.BilingualProgram)
                </dt>
                <dd>
                    @Html.DisplayTextFor(model => model.ProgramStatus.BilingualProgram)<br />
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ProgramStatus.EnglishAsSecondLanguage)
                </dt>
                <dd>
                    @Html.DisplayTextFor(model => model.ProgramStatus.EnglishAsSecondLanguage)<br />
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ProgramStatus.Gifted)
                </dt>
                <dd>
                    @Html.DisplayTextFor(model => model.ProgramStatus.Gifted)<br />
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ProgramStatus.SpecialEducation)
                </dt>
                <dd>
                    @Html.DisplayTextFor(model => model.ProgramStatus.SpecialEducation)
                    @if (Model.ProgramStatus.SpecialEducationFile != null)
                    {
                        <a href="@Model.ProgramStatus.SpecialEducationFile">@downloadFileText</a>
                    }
                    <br />
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ProgramStatus.TitleParticipation)
                </dt>
                <dd>
                    @Html.DisplayTextFor(model => model.ProgramStatus.TitleParticipation)
                    @if (Model.ProgramStatus.TitleParticipationFile != null)
                    {
                        <a href="@Model.ProgramStatus.TitleParticipationFile">@downloadFileText</a>
                    }
                    <br />
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ProgramStatus.McKinneyVento)
                </dt>
                <dd>
                    @Html.DisplayTextFor(model => model.ProgramStatus.McKinneyVento)
                    @if (Model.ProgramStatus.McKinneyVentoFile != null)
                    {
                        <a href="@Model.ProgramStatus.McKinneyVentoFile">@downloadFileText</a>
                    }
                    <br />
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ProgramStatus.FoodServiceEligibilityStatus)
                </dt>
                <dd>
                    @Html.DisplayTextFor(model => model.ProgramStatus.FoodServiceEligibilityStatus)<br />
                </dd>
            </dl>
        }        
        <h4>Home Address</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Address)
            </dt>

            <dd>
                @Html.DisplayTextFor(model => model.Address)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Address2)
            </dt>
            <dd>
                @Html.DisplayTextFor(model => model.Address2)<br />
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.City)
            </dt>

            <dd>
                @Html.DisplayTextFor(model => model.City)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.State)
            </dt>
            <dd>
                @Html.DisplayTextFor(model => model.State)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.PostalCode)
            </dt>

            <dd>
                @Html.DisplayTextFor(model => model.PostalCode)
            </dd>
        </dl>
        <h4>Parent</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.ProfileParentModel.FirstName)
            </dt>

            <dd>
                @Html.DisplayTextFor(model => model.ProfileParentModel.FirstName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.ProfileParentModel.LastName)
            </dt>

            <dd>
                @Html.DisplayTextFor(model => model.ProfileParentModel.LastName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.ProfileParentModel.Sex)
            </dt>

            <dd>
                @Html.DisplayTextFor(model => model.ProfileParentModel.Sex)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.ProfileParentModel.Relationship)
            </dt>
            <dd>
                @Html.DisplayTextFor(model => model.ProfileParentModel.Relationship)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.ProfileParentModel.TelephoneNumber)
            </dt>

            <dd>
                @Html.DisplayTextFor(model => model.ProfileParentModel.TelephoneNumber)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.ProfileParentModel.EmailAddress)
            </dt>

            <dd>
                @Html.DisplayTextFor(model => model.ProfileParentModel.EmailAddress)<br />
            </dd>
        </dl>
        <h4>Parent Address</h4>
        <hr />
        @if (Model.ProfileParentModel.SameAddressAsStudent == false)
        {

            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.ProfileParentModel.ProfileParentAddressModel.Address)
                </dt>
                <dd>
                    @Html.DisplayTextFor(model => model.ProfileParentModel.ProfileParentAddressModel.Address)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ProfileParentModel.ProfileParentAddressModel.Address2)
                </dt>
                <dd>
                    @Html.DisplayTextFor(model => model.ProfileParentModel.ProfileParentAddressModel.Address2)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ProfileParentModel.ProfileParentAddressModel.City)
                </dt>
                <dd>
                    @Html.DisplayTextFor(model => model.ProfileParentModel.ProfileParentAddressModel.City)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ProfileParentModel.ProfileParentAddressModel.State)
                </dt>
                <dd>
                    @Html.DisplayTextFor(model => model.ProfileParentModel.ProfileParentAddressModel.State)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ProfileParentModel.ProfileParentAddressModel.PostalCode)
                </dt>
                <dd>
                    @Html.DisplayTextFor(model => model.ProfileParentModel.ProfileParentAddressModel.PostalCode)
                </dd>
            </dl>
        }
        else
        {
            <p>Same as student</p><br />
        }

        @if (Model.SecondProfileParentModel != null)
        {

            <h4>Second Parent</h4>
            <hr />
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.SecondProfileParentModel.FirstName)
                </dt>

                <dd>
                    @Html.DisplayTextFor(model => model.SecondProfileParentModel.FirstName)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.SecondProfileParentModel.LastName)
                </dt>

                <dd>
                    @Html.DisplayTextFor(model => model.SecondProfileParentModel.LastName)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.SecondProfileParentModel.Sex)
                </dt>

                <dd>
                    @Html.DisplayTextFor(model => model.SecondProfileParentModel.Sex)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.SecondProfileParentModel.Relationship)
                </dt>
                <dd>
                    @Html.DisplayTextFor(model => model.SecondProfileParentModel.Relationship)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.SecondProfileParentModel.TelephoneNumber)
                </dt>

                <dd>
                    @Html.DisplayTextFor(model => model.SecondProfileParentModel.TelephoneNumber)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.SecondProfileParentModel.EmailAddress)
                </dt>

                <dd>
                    @Html.DisplayTextFor(model => model.SecondProfileParentModel.EmailAddress)<br />
                </dd>
            </dl>

            <h4>Second Parent Address</h4>
            <hr />
            if (Model.SecondProfileParentModel.SameAddressAsStudent == false)
            {

                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.SecondProfileParentModel.ProfileParentAddressModel.Address)
                    </dt>
                    <dd>
                        @Html.DisplayTextFor(model => model.SecondProfileParentModel.ProfileParentAddressModel.Address)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.SecondProfileParentModel.ProfileParentAddressModel.Address2)
                    </dt>
                    <dd>
                        @Html.DisplayTextFor(model => model.SecondProfileParentModel.ProfileParentAddressModel.Address2)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.SecondProfileParentModel.ProfileParentAddressModel.City)
                    </dt>
                    <dd>
                        @Html.DisplayTextFor(model => model.SecondProfileParentModel.ProfileParentAddressModel.City)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.SecondProfileParentModel.ProfileParentAddressModel.State)
                    </dt>
                    <dd>
                        @Html.DisplayTextFor(model => model.SecondProfileParentModel.ProfileParentAddressModel.State)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.SecondProfileParentModel.ProfileParentAddressModel.PostalCode)
                    </dt>
                    <dd>
                        @Html.DisplayTextFor(model => model.SecondProfileParentModel.ProfileParentAddressModel.PostalCode)
                    </dd>
                </dl>
            }
            else
            {
                <p>Same as student</p><br />
            }

        }
    </div>

    </div>

    @section Scripts {
        Ngl.student.index.init();
    }
