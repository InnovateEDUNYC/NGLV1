@using Castle.Core.Internal
@model NGL.Web.Models.ParentCourse.ParentCourseGradesModel

@{
    ViewBag.Title = "Assign Student Grades";
}

<div class="panel panel-default">
    <h2>@ViewBag.Title</h2>
</div>
<div>
    <div class="panel panel-default">
        <h4><strong>Session</strong></h4>
        @Html.TextBoxFor(m => m.FindParentCourseModel.Session, new { @class = "form-control", @id = "Session" })
        <h4><strong>Parent Course</strong></h4>
        @Html.TextBoxFor(m => m.FindParentCourseModel.ParentCourse, new { @class = "form-control", @id = "ParentCourse" })

        @Html.HiddenFor(m => m.FindParentCourseModel.SessionId, new { @id = "SessionId" })
        @Html.HiddenFor(m => m.FindParentCourseModel.ParentCourseId, new { @id = "ParentCourseId" })
    </div>
</div>
<br/>

<div class="panel panel-default">
    @if (!Model.ParentGradesModelList.IsNullOrEmpty())
    {
        <form method="POST" action="">
        <div class="hidden">
            @Html.TextBoxFor(s => Model.FindParentCourseModel.ParentCourseId)
            @Html.TextBoxFor(s => Model.FindParentCourseModel.ParentCourse)
            @Html.TextBoxFor(s => Model.FindParentCourseModel.SessionId)
            @Html.TextBoxFor(s => Model.FindParentCourseModel.Session)
        </div>
        <table class="table table-striped">
            <thead>
                <tr>
                    <td>
                        <h4><strong>STUDENTS</strong></h4>
                    </td>
                    <td>
                        <h4 class="pull-right">Final Grade</h4>
                    </td>
                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < Model.ParentGradesModelList.Count; i++)
                {
                    <tr>
                        <td class="vertical-align-middle">
                            <div class="hidden">
                                @Html.TextBoxFor(s => Model.ParentGradesModelList[i].StudentFirstName)
                                @Html.TextBoxFor(s => Model.ParentGradesModelList[i].StudentLastName)
                            </div>
                            @Model.ParentGradesModelList[i].StudentFirstName @Model.ParentGradesModelList[i].StudentLastName
                        </td>
                        <td>
                            @Html.TextBoxFor(s => Model.ParentGradesModelList[i].Grade, new { @id = "grade-" + i, @class = "grade-textbox" })<br/><br/>
                            @Html.ValidationMessageFor(s => Model.ParentGradesModelList[i].Grade, "Grade cannot be more than 20 characters.", new { @class = "grade-textbox-error" })
                        </td>
                        <div class="hidden">
                            @Html.TextBoxFor(s => Model.ParentGradesModelList[i].StudentUSI)
                        </div>
                    </tr>
                }
            </tbody>
        </table>
        <div class="cancel-and-save-buttons">
            @Html.ActionLink("Cancel", MVC.ParentCourseGrade.Get(Model.FindParentCourseModel.SessionId, Model.FindParentCourseModel.ParentCourseId), new { @class = "btn btn-default" })
            <button class="btn btn-primary" type="submit">Save Results</button>
        </div>
    </form>
    }
    else
    {
        <p>No students have been assigned to this course.</p>
    }
</div>
@section Scripts {
    Ngl.shared.sessionAutocomplete.init();
    Ngl.shared.parentCourseAutocomplete.init();
    Ngl.report.getGrades.init(window);
}