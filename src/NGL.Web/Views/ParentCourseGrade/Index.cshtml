@using Castle.Core.Internal
@using NGL.Web.Infrastructure.Security
@model NGL.Web.Models.ParentCourse.ParentCourseGradesModel

@{
    ViewBag.Title = "Assign Student Grades";
}
<div class="panel panel-default panel-above-table">
    <h2>@ViewBag.Title</h2>
</div>
<div class="panel panel-default panel-above-table">
        <h4><strong>Session</strong></h4>
        @Html.TextBoxFor(m => m.FindParentCourseModel.Session, new { @class = "form-control", @id = "Session" })
        <h4><strong>Parent Course</strong></h4>
        @Html.TextBoxFor(m => m.FindParentCourseModel.ParentCourse, new { @class = "form-control ", @id = "ParentCourse" })

        @Html.HiddenFor(m => m.FindParentCourseModel.SessionId, new { @id = "SessionId" })
        @Html.HiddenFor(m => m.FindParentCourseModel.ParentCourseId, new { @id = "ParentCourseId" })
</div>
<div class="panel panel-default table-with-buttons-container">
    @if (!Model.ParentGradesModelList.IsNullOrEmpty())
    {

        <table class="table table-striped">
            <thead>
                <tr>
                    <td>
                        <h4><strong>Students</strong></h4>
                    </td>
                    <td>
                        <h4 class="pull-right">Final Grade</h4>
                    </td>
                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < Model.ParentGradesModelList.Count; i++)
                {
                    <tr>
                        <td>
                            @Model.ParentGradesModelList[i].StudentFirstName @Model.ParentGradesModelList[i].StudentLastName
                        </td>
                        <td>
                            <span class="pull-right">
                                @Model.ParentGradesModelList[i].Grade
                            </span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    <div class="cancel-and-save-buttons">
        @if ((User as NglPrincipal).HasAccessTo("grades", "edit"))
        {
        @Html.ActionLink("Edit", MVC.ParentCourseGrade.Edit(Model.FindParentCourseModel.SessionId, Model.FindParentCourseModel.ParentCourseId),
                new { @class = "btn btn-primary top-buffer-20 pull-right" })
        }
        @if ((User as NglPrincipal).HasAccessTo("grades", "view"))
        {
        @Html.ActionLink("Export as CSV file", MVC.ParentCourseGrade.ExportCsv(Model.FindParentCourseModel.SessionId, Model.FindParentCourseModel.ParentCourseId), new { @class = "top-buffer-20 btn btn-default pull-right right-elbow-room" })
        }
    </div>

    }
    else
    {
        <p>No students have been assigned to this course.</p>
    }
</div>
<div></div>
@section Scripts {
    Ngl.shared.sessionAutocomplete.init();
    Ngl.shared.parentCourseAutocomplete.init();
    Ngl.report.getGrades.init(window);
}